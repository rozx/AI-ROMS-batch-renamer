name: Create Release

on:
  push:
    # branches to consider in the event; optional, defaults to all
    branches: ["release","test-workflow"]

jobs:

  # Release and linux
  builds-on-linux-and-release:
    runs-on: ubuntu-latest
    permissions:
      # write permission is required to create a github release
      contents: write
      # write permission is required for autolabeler
      # otherwise, read permission is required at least
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install jq
        run: sudo apt-get install -y jq
      - name: Extract version from package.json
        id: get_version
        run: echo "APP_VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV && echo 'Exacted version ${{ env.APP_VERSION }}'
      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Install bun dependencies
        run: bun install
      - name: Build linux
        run: bun build-linux

      # - name: RenameMacBuild
      #   run: mv ./dist/RomBatchRenamer-Mac-Arm64-Modern ./dist/RomBatchRenamer-Mac-Arm64-Modern-v${{ env.APP_VERSION }}
      # - name: RenameWinBuild
      #   run: mv ./dist/RomBatchRenamer-Win-X64-Modern.exe ./dist/RomBatchRenamer-Win-X64-Modern-v${{ env.APP_VERSION }}.exe
      - name: RenameLinuxBuild
        run: mv ./dist/RomBatchRenamer-Linux-X64-Modern ./dist/RomBatchRenamer-Linux-X64-Modern-v${{ env.APP_VERSION }}

      # Create draft releases
      - name: Create GitHub Release
        id: create_release
        # Drafts your next Release notes as Pull Requests are merged into "master"
        uses: release-drafter/release-drafter@v6
        # (Optional) specify config name to use, relative to .github/. Default: release-drafter.yml
        # with:
        #   config-name: my-config.yml
        #   disable-autolabeler: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload artifacts
      - name: Make version artifact
        run: echo '${{ env.APP_VERSION }}' > appVersion.txt
      - name: Upload version
        uses: actions/upload-artifact@v4
        with:
          name: appVersion
          path: appVersion.txt
      - name: Make release upload url
        run: echo '${{ steps.create_release.outputs.upload_url }}' > releaseUploadUrl.txt
      - name: Upload release upload url
        uses: actions/upload-artifact@v4
        with:
          name: releaseUploadUrl
          path: releaseUploadUrl.txt


      # Uploads
      # - name: Upload Mac build
      #   uses: shogo82148/actions-upload-release-asset@v1
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./dist/RomBatchRenamer-Mac-Arm64-Modern-v${{ env.APP_VERSION }}
      
      # - name: Upload Win build
      #   uses: shogo82148/actions-upload-release-asset@v1
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./dist/RomBatchRenamer-Win-X64-Modern-v${{ env.APP_VERSION }}.exe

      - name: Upload Linux build
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          overwrite: true
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/RomBatchRenamer-Linux-X64-Modern-v${{ env.APP_VERSION }}

      

  # Windows
  builds-on-windows:
    runs-on: windows-latest
    needs: builds-on-linux-and-release
    permissions:
      # write permission is required to create a github release
      contents: write
      # write permission is required for autolabeler
      # otherwise, read permission is required at least
      pull-requests: write

    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Install bun dependencies
        run: bun install
      - name: Build windows
        run: bun build-win

      # artifact
      - name: download appVersion
        uses: actions/download-artifact@v4
        with:
          name: appVersion
      - name: download release upload url
        uses: actions/download-artifact@v4
        with:
          name: releaseUploadUrl
      - name: show appVersion
        run: echo "$(cat appVersion.txt)"
      - name: set appVersion
        run: echo "APP_VERSION=$(cat appVersion.txt)" >> $env:GITHUB_ENV
      - name: set releaseUploadUrl
        run: echo "RELEASE_UPLOAD_URL=$(cat releaseUploadUrl.txt)" >> $env:GITHUB_ENV

      # rename and upload
      - name: rename build
        run: cd dist && ren RomBatchRenamer-Win-X64-Modern.exe RomBatchRenamer-Win-X64-Modern-v${{ env.APP_VERSION }}.exe
      - name: Upload Win build
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          overwrite: true
          upload_url: ${{ env.RELEASE_UPLOAD_URL }}
          asset_path: .\dist\RomBatchRenamer-Win-X64-Modern-v${{ env.APP_VERSION }}.exe

  # Mac
  builds-on-mac:
    runs-on: macOS-latest
    needs: [builds-on-linux-and-release]
    permissions:
      # write permission is required to create a github release
      contents: write
      # write permission is required for autolabeler
      # otherwise, read permission is required at least
      pull-requests: write

    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Install bun dependencies
        run: bun install
      - name: Build mac
        run: bun build-mac

      # artifact
      - name: download appVersion
        uses: actions/download-artifact@v4
        with:
          name: appVersion
      - name: download release upload url
        uses: actions/download-artifact@v4
        with:
          name: releaseUploadUrl
      - name: set appVersion
        run: echo "APP_VERSION=$(cat appVersion.txt)" >> $GITHUB_ENV
      - name: set releaseUploadUrl
        run: echo "RELEASE_UPLOAD_URL=$(cat releaseUploadUrl.txt)" >> $GITHUB_ENV
      
      # rename and upload
      - name: rename build
        run:  mv ./dist/RomBatchRenamer-Mac-Arm64-Modern ./dist/RomBatchRenamer-Mac-Arm64-Modern-v${{ env.APP_VERSION }}
      - name: Upload Mac build
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          overwrite: true
          upload_url: ${{ env.RELEASE_UPLOAD_URL }}
          asset_path: RomBatchRenamer-Mac-Arm64-Modern-v${{ env.APP_VERSION }}
      
      
      
    
    
  
  

