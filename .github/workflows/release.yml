name: Create Release

on:
  push:
    # branches to consider in the event; optional, defaults to all
    branches: ["release", "test-workflow"]

jobs:
  # Release and linux
  builds-on-linux-and-release:
    runs-on: ubuntu-latest
    permissions:
      # write permission is required to create a github release
      contents: write
      # write permission is required for autolabeler
      # otherwise, read permission is required at least
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install jq
        run: sudo apt-get install -y jq
      - name: Extract version from package.json
        id: get_version
        run: echo "APP_VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV && echo 'Exacted version ${{ env.APP_VERSION }}'
      - name: Set up Bun
        uses: oven-sh/setup-bun@v2.0.1
        with:
          bun-version: latest
      - name: Install bun dependencies
        run: bun install

      # Create draft releases
      - name: Create GitHub Release
        id: create_release
        # Drafts your next Release notes as Pull Requests are merged into "master"
        uses: release-drafter/release-drafter@v6
        # (Optional) specify config name to use, relative to .github/. Default: release-drafter.yml
        # with:
        #   config-name: my-config.yml
        #   disable-autolabeler: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Make the x64 build and upload it
      - name: Build linux-x64
        run: bun build-linux-x64
      - name: Archive the build
        uses: TheDoctor0/zip-release@0.7.6
        with:
          filename: release-x64.zip
          type: zip
          path: ./dist/RomBatchRenamer-Linux-X64-Baseline
      - name: Upload the x64 build
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          overwrite: true
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release-x64.zip
          asset_name: RomBatchRenamer-Linux-X64-Baseline-v${{ env. APP_VERSION}}.zip

      # Make the arm build and upload it
      - name: Build linux-arm
        run: bun build-linux-arm
      - name: Archive the build
        uses: TheDoctor0/zip-release@0.7.6
        with:
          filename: release-arm.zip
          type: zip
          path: ./dist/RomBatchRenamer-Linux-Arm-Modern
      - name: Upload the arm build
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          overwrite: true
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release-arm.zip
          asset_name: RomBatchRenamer-Linux-Arm-Modern-v${{ env. APP_VERSION}}.zip

      # Upload artifacts
      - name: Make version artifact
        run: echo '${{ env.APP_VERSION }}' > appVersion.txt
      - name: Upload version
        uses: actions/upload-artifact@v4
        with:
          name: appVersion
          path: appVersion.txt
      - name: Make release upload url
        run: echo '${{ steps.create_release.outputs.upload_url }}' > releaseUploadUrl.txt
      - name: Upload release upload url
        uses: actions/upload-artifact@v4
        with:
          name: releaseUploadUrl
          path: releaseUploadUrl.txt

  # Windows
  builds-on-windows:
    runs-on: windows-latest
    needs: builds-on-linux-and-release
    permissions:
      # write permission is required to create a github release
      contents: write
      # write permission is required for autolabeler
      # otherwise, read permission is required at least
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Bun
        uses: oven-sh/setup-bun@v2.0.1
        with:
          bun-version: latest
      - name: Install bun dependencies
        run: bun install
      - name: Build windows x64
        run: bun build-win-x64

      # artifact
      - name: download appVersion
        uses: actions/download-artifact@v4
        with:
          name: appVersion
      - name: download release upload url
        uses: actions/download-artifact@v4
        with:
          name: releaseUploadUrl
      - name: show appVersion
        run: echo "$(cat appVersion.txt)"
      - name: set appVersion
        run: echo "APP_VERSION=$(cat appVersion.txt)" >> $env:GITHUB_ENV
      - name: set releaseUploadUrl
        run: echo "RELEASE_UPLOAD_URL=$(cat releaseUploadUrl.txt)" >> $env:GITHUB_ENV

      # Archive and upload

      - name: Archive the build
        uses: TheDoctor0/zip-release@0.7.6
        with:
          filename: release-x64.zip
          type: zip
          path: .\dist\RomBatchRenamer-Win-X64-Baseline.exe

      - name: Upload Win build
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          overwrite: true
          upload_url: ${{ env.RELEASE_UPLOAD_URL }}
          asset_path: release-x64.zip
          asset_name: RomBatchRenamer-Win-X64-Baseline-v${{ env. APP_VERSION}}.zip

  # Mac
  builds-on-mac:
    runs-on: macos-latest
    needs: [builds-on-linux-and-release]
    permissions:
      # write permission is required to create a github release
      contents: write
      # write permission is required for autolabeler
      # otherwise, read permission is required at least
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Bun
        uses: oven-sh/setup-bun@v2.0.1
        with:
          bun-version: latest
      - name: Install bun dependencies
        run: bun install
      - name: test run
        run: bun start rename -h
      - name: Build mac-arm
        run: bun build-mac-arm
      - name: Build mac-x64
        run: bun build-mac-x64

      # artifact
      - name: download appVersion
        uses: actions/download-artifact@v4
        with:
          name: appVersion
      - name: download release upload url
        uses: actions/download-artifact@v4
        with:
          name: releaseUploadUrl
      - name: set appVersion
        run: echo "APP_VERSION=$(cat appVersion.txt)" >> $GITHUB_ENV
      - name: set releaseUploadUrl
        run: echo "RELEASE_UPLOAD_URL=$(cat releaseUploadUrl.txt)" >> $GITHUB_ENV

      # Archive and upload the arm build
      - name: Archive the arm build
        uses: TheDoctor0/zip-release@0.7.6
        with:
          filename: release-arm.zip
          type: zip
          path: ./dist/RomBatchRenamer-Mac-Arm-Modern
      - name: Upload Arm Mac build
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          overwrite: true
          upload_url: ${{ env.RELEASE_UPLOAD_URL }}
          asset_path: release-arm.zip
          asset_name: RomBatchRenamer-Mac-Arm-Modern-v${{ env. APP_VERSION}}.zip

      # Archive and upload the arm build
      - name: Archive the X64 build
        uses: TheDoctor0/zip-release@0.7.6
        with:
          filename: release-x64.zip
          type: zip
          path: ./dist/RomBatchRenamer-Mac-X64-Baseline
      - name: Upload X64 Mac build
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          overwrite: true
          upload_url: ${{ env.RELEASE_UPLOAD_URL }}
          asset_path: release-x64.zip
          asset_name: RomBatchRenamer-Mac-X64-Baseline-v${{ env. APP_VERSION}}.zip
